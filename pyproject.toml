[project]
name = "gptcomet"
version = "0.0.23"
description = "gptcomet: A tool that leverages AI to automatically generate Git commit messages."
authors = [{ name = "belingud", email = "im.victor@qq.com" }]
readme = "README.md"
packages = [{ include = "gptcomet" }]
requires-python = ">=3.9,<4.0"
dependencies = [
    "gitpython>=3.1.43",
    "click>=8.1.7",
    "orjson>=3.10.6",
    "ruamel-yaml>=0.18.6",
    "glom>=23.5.0",
    "typer>=0.12.5",
    "rich>=13.8.0",
    "prompt-toolkit>=3.0.47",
    "httpx>=0.27.2",
    "socksio>=1.0.0",
]
license = { text = "MIT license" }
keywords = [
    "ai",
    "git",
    "commit",
    "message",
    "ai-powered",
    "commit-message",
    "gptcomet",
    "chatgpt",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/belingud/gptcomet"
Repository = "https://github.com/belingud/gptcomet"
Documentation = "https://github.com/belingud/gptcomet"

[project.scripts]
gptcomet = "gptcomet.clis.__main__:app"
gmsg = "gptcomet.clis.__main__:app"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py39"
line-length = 100
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["gptcomet"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.pdm]
distribution = true

[tool.pdm.scripts]
bump = "bump2version {args}"
gen_keys = "python scripts/gen_support_keys.py"

[tool.pytest.ini_options]
addopts = "-rsxX -s -l --tb=short --strict"
testpaths = ["tests/"]
python_files = ["test*.py"]
markers = ["skipif: conditionally skip tests"]
# Ignore gitpython USE_SHELL=True deprecation warning, caused by pytest, not truely used in project
filterwarnings = ["ignore::DeprecationWarning"]

[tool.pdm.build]
excludes = ["./**/.git"]
package-dir = "."
includes = ["gptcomet"]

[dependency-groups]
dev = [
    "deptry>=0.6.4",
    "pre-commit>=3.8.0",
    "tox>=3.25.1",
    "ruff>=0.5.6",
    "bump2version>=1.0.1",
    "pyinstaller>=6.11.1",
]
test = ["pytest>=7.2.0", "pytest-cov>=4.0.0"]
profile = ["pyinstrument>=4.7.2", "line-profiler>=4.1.3"]
