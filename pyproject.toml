[project]
name = "gptcomet"
version = "0.2.1"
description = "GPTComet: AI-Powered Git Commit Message Generator."
authors = [{ name = "belingud", email = "im.victor@qq.com" }]
readme = "README.md"
packages = [{ include = "gptcomet" }]
requires-python = ">=3.9,<4.0"
dependencies = []
license = { text = "MIT license" }
keywords = [
    "ai",
    "git",
    "commit",
    "message",
    "ai-powered",
    "commit-message",
    "gptcomet",
    "chatgpt",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/belingud/gptcomet"
Repository = "https://github.com/belingud/gptcomet"
Documentation = "https://github.com/belingud/gptcomet"

[project.scripts]
gmsg = "gptcomet:main"
gptcomet = "gptcomet:main"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.build]
package-dir = "py"
excludes = ["**/tests", "**/.gitkeep"]
is-purelib = false
platforms = [
    "linux_x86_64",
    "linux_aarch64",
    "win_amd64",
    "win_arm64",
    "macos_x86_64",
    "macos_arm64",
]
source-includes = ["LICENSE", "README.md", "pyproject.toml"]

[tool.pdm.build.wheel-data]
plat-name = {win32 = "win_amd64", linux_x86_64 = "manylinux2014_x86_64", darwin_x86_64 = "macosx_10_9_x86_64", darwin_arm64 = "macosx_11_0_arm64"}

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py39"
line-length = 100
fix = true
exclude = ["tests/*"]
src = ["gptcomet"]

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["gptcomet"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.pdm]
distribution = true

[tool.pdm.scripts]
bump = "bump2version {args}"
gen_keys = "python scripts/gen_support_keys.py"
pygmsg = ".venv/bin/gmsg"

[tool.pytest.ini_options]
addopts = "-rsxX -s -l --tb=short --strict"
testpaths = ["tests/"]
python_files = ["test*.py"]
markers = ["skipif: conditionally skip tests"]
# Ignore gitpython USE_SHELL=True deprecation warning, caused by pytest, not truely used in project
filterwarnings = ["ignore::DeprecationWarning"]

[dependency-groups]
dev = [
    "bump2version>=1.0.1",
]
